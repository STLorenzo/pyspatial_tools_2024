services:
  app:
    # BUILD
    image: pato_spatial:1.0-dev
    build:
      context: ..
      dockerfile: Dockerfile
      target: dev
      args:
        - PYTHON_VERSION=${PYTHON_VERSION}
        - DOCKER_USER=$USER
        - JDK_VERSION=${JDK_VERSION}
        - SPARK_VERSION=${SPARK_VERSION}
        - SCALA_VERSION=${SCALA_VERSION}
        - SEDONA_VERSION=${SEDONA_VERSION}
        - GEOTOOLS_WRAPPER_VERSION=${GEOTOOLS_WRAPPER_VERSION}
    # RUN
    container_name: ${CONTAINER_NAME}
    hostname: ${CONTAINER_NAME}
    command: sleep infinity
    ports:
      - "127.0.0.1:${JL_PORT}:8888"
      - "127.0.0.1:${SUI_PORT}:4040"
      - "127.0.0.1:${SHS_PORT}:18080"
    volumes:
      - ..:/opt/app
      - ${DATA_DIR}:/opt/data
      - ${SPARK_LOGS_DIR}:/opt/spark/spark-events
    environment:
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}

  minio:
    image: minio/minio
    container_name: minio
    hostname: minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - project_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  project_data:
    name: ${DATA_VOLUME}
    